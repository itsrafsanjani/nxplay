/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/frontend/jquery.morelines.min.js":
/*!*******************************************************!*\
  !*** ./resources/js/frontend/jquery.morelines.min.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("!function (s) {\n  s.fn.moreLines = function (e) {\n    \"use strict\";\n\n    return this.each(function () {\n      var t = s(this),\n          i = (t.find(\"p\"), parseFloat(t.css(\"line-height\"))),\n          a = t.innerHeight(),\n          n = s.extend({\n        linecount: 1,\n        baseclass: \"b-morelines_\",\n        basejsclass: \"js-morelines_\",\n        classspecific: \"section\",\n        buttontxtmore: \"more lines\",\n        buttontxtless: \"less lines\",\n        animationspeed: 1\n      }, e),\n          c = n.baseclass + n.classspecific + \"_ellipsis\",\n          l = n.baseclass + n.classspecific + \"_button\",\n          o = n.baseclass + n.classspecific + \"_wrapper\",\n          h = n.basejsclass + n.classspecific + \"_wrapper\",\n          r = s(\"<div>\").addClass(o + \" \" + h).css({\n        \"max-width\": t.css(\"width\")\n      }),\n          m = i * n.linecount;\n\n      if (t.wrap(r), t.parent().not(h) && a > m) {\n        t.addClass(c).css({\n          \"min-height\": m,\n          \"max-height\": m,\n          overflow: \"hidden\"\n        });\n        var p = s(\"<div>\", {\n          \"class\": l,\n          click: function click() {\n            t.toggleClass(c), s(this).toggleClass(l + \"_active\"), \"none\" !== t.css(\"max-height\") ? t.css({\n              height: m,\n              \"max-height\": \"\"\n            }).animate({\n              height: a\n            }, n.animationspeed, function () {\n              p.html(n.buttontxtless);\n            }) : t.animate({\n              height: m\n            }, n.animationspeed, function () {\n              p.html(n.buttontxtmore), t.css(\"max-height\", m);\n            });\n          },\n          html: n.buttontxtmore\n        });\n        t.after(p);\n      }\n    }), this;\n  };\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZnJvbnRlbmQvanF1ZXJ5Lm1vcmVsaW5lcy5taW4uanM/ZDNiNCJdLCJuYW1lcyI6WyJzIiwiZm4iLCJtb3JlTGluZXMiLCJlIiwiZWFjaCIsInQiLCJpIiwiZmluZCIsInBhcnNlRmxvYXQiLCJjc3MiLCJhIiwiaW5uZXJIZWlnaHQiLCJuIiwiZXh0ZW5kIiwibGluZWNvdW50IiwiYmFzZWNsYXNzIiwiYmFzZWpzY2xhc3MiLCJjbGFzc3NwZWNpZmljIiwiYnV0dG9udHh0bW9yZSIsImJ1dHRvbnR4dGxlc3MiLCJhbmltYXRpb25zcGVlZCIsImMiLCJsIiwibyIsImgiLCJyIiwiYWRkQ2xhc3MiLCJtIiwid3JhcCIsInBhcmVudCIsIm5vdCIsIm92ZXJmbG93IiwicCIsImNsaWNrIiwidG9nZ2xlQ2xhc3MiLCJoZWlnaHQiLCJhbmltYXRlIiwiaHRtbCIsImFmdGVyIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLFVBQVNBLENBQVQsRUFBVztBQUFDQSxHQUFDLENBQUNDLEVBQUYsQ0FBS0MsU0FBTCxHQUFlLFVBQVNDLENBQVQsRUFBVztBQUFDOztBQUFhLFdBQU8sS0FBS0MsSUFBTCxDQUFVLFlBQVU7QUFBQyxVQUFJQyxDQUFDLEdBQUNMLENBQUMsQ0FBQyxJQUFELENBQVA7QUFBQSxVQUFjTSxDQUFDLElBQUVELENBQUMsQ0FBQ0UsSUFBRixDQUFPLEdBQVAsR0FBWUMsVUFBVSxDQUFDSCxDQUFDLENBQUNJLEdBQUYsQ0FBTSxhQUFOLENBQUQsQ0FBeEIsQ0FBZjtBQUFBLFVBQStEQyxDQUFDLEdBQUNMLENBQUMsQ0FBQ00sV0FBRixFQUFqRTtBQUFBLFVBQWlGQyxDQUFDLEdBQUNaLENBQUMsQ0FBQ2EsTUFBRixDQUFTO0FBQUNDLGlCQUFTLEVBQUMsQ0FBWDtBQUFhQyxpQkFBUyxFQUFDLGNBQXZCO0FBQXNDQyxtQkFBVyxFQUFDLGVBQWxEO0FBQWtFQyxxQkFBYSxFQUFDLFNBQWhGO0FBQTBGQyxxQkFBYSxFQUFDLFlBQXhHO0FBQXFIQyxxQkFBYSxFQUFDLFlBQW5JO0FBQWdKQyxzQkFBYyxFQUFDO0FBQS9KLE9BQVQsRUFBMktqQixDQUEzSyxDQUFuRjtBQUFBLFVBQWlRa0IsQ0FBQyxHQUFDVCxDQUFDLENBQUNHLFNBQUYsR0FBWUgsQ0FBQyxDQUFDSyxhQUFkLEdBQTRCLFdBQS9SO0FBQUEsVUFBMlNLLENBQUMsR0FBQ1YsQ0FBQyxDQUFDRyxTQUFGLEdBQVlILENBQUMsQ0FBQ0ssYUFBZCxHQUE0QixTQUF6VTtBQUFBLFVBQW1WTSxDQUFDLEdBQUNYLENBQUMsQ0FBQ0csU0FBRixHQUFZSCxDQUFDLENBQUNLLGFBQWQsR0FBNEIsVUFBalg7QUFBQSxVQUE0WE8sQ0FBQyxHQUFDWixDQUFDLENBQUNJLFdBQUYsR0FBY0osQ0FBQyxDQUFDSyxhQUFoQixHQUE4QixVQUE1WjtBQUFBLFVBQXVhUSxDQUFDLEdBQUN6QixDQUFDLENBQUMsT0FBRCxDQUFELENBQVcwQixRQUFYLENBQW9CSCxDQUFDLEdBQUMsR0FBRixHQUFNQyxDQUExQixFQUE2QmYsR0FBN0IsQ0FBaUM7QUFBQyxxQkFBWUosQ0FBQyxDQUFDSSxHQUFGLENBQU0sT0FBTjtBQUFiLE9BQWpDLENBQXphO0FBQUEsVUFBd2VrQixDQUFDLEdBQUNyQixDQUFDLEdBQUNNLENBQUMsQ0FBQ0UsU0FBOWU7O0FBQXdmLFVBQUdULENBQUMsQ0FBQ3VCLElBQUYsQ0FBT0gsQ0FBUCxHQUFVcEIsQ0FBQyxDQUFDd0IsTUFBRixHQUFXQyxHQUFYLENBQWVOLENBQWYsS0FBbUJkLENBQUMsR0FBQ2lCLENBQWxDLEVBQW9DO0FBQUN0QixTQUFDLENBQUNxQixRQUFGLENBQVdMLENBQVgsRUFBY1osR0FBZCxDQUFrQjtBQUFDLHdCQUFha0IsQ0FBZDtBQUFnQix3QkFBYUEsQ0FBN0I7QUFBK0JJLGtCQUFRLEVBQUM7QUFBeEMsU0FBbEI7QUFBcUUsWUFBSUMsQ0FBQyxHQUFDaEMsQ0FBQyxDQUFDLE9BQUQsRUFBUztBQUFDLG1CQUFNc0IsQ0FBUDtBQUFTVyxlQUFLLEVBQUMsaUJBQVU7QUFBQzVCLGFBQUMsQ0FBQzZCLFdBQUYsQ0FBY2IsQ0FBZCxHQUFpQnJCLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUWtDLFdBQVIsQ0FBb0JaLENBQUMsR0FBQyxTQUF0QixDQUFqQixFQUFrRCxXQUFTakIsQ0FBQyxDQUFDSSxHQUFGLENBQU0sWUFBTixDQUFULEdBQTZCSixDQUFDLENBQUNJLEdBQUYsQ0FBTTtBQUFDMEIsb0JBQU0sRUFBQ1IsQ0FBUjtBQUFVLDRCQUFhO0FBQXZCLGFBQU4sRUFBa0NTLE9BQWxDLENBQTBDO0FBQUNELG9CQUFNLEVBQUN6QjtBQUFSLGFBQTFDLEVBQXFERSxDQUFDLENBQUNRLGNBQXZELEVBQXNFLFlBQVU7QUFBQ1ksZUFBQyxDQUFDSyxJQUFGLENBQU96QixDQUFDLENBQUNPLGFBQVQ7QUFBd0IsYUFBekcsQ0FBN0IsR0FBd0lkLENBQUMsQ0FBQytCLE9BQUYsQ0FBVTtBQUFDRCxvQkFBTSxFQUFDUjtBQUFSLGFBQVYsRUFBcUJmLENBQUMsQ0FBQ1EsY0FBdkIsRUFBc0MsWUFBVTtBQUFDWSxlQUFDLENBQUNLLElBQUYsQ0FBT3pCLENBQUMsQ0FBQ00sYUFBVCxHQUF3QmIsQ0FBQyxDQUFDSSxHQUFGLENBQU0sWUFBTixFQUFtQmtCLENBQW5CLENBQXhCO0FBQThDLGFBQS9GLENBQTFMO0FBQTJSLFdBQXJUO0FBQXNUVSxjQUFJLEVBQUN6QixDQUFDLENBQUNNO0FBQTdULFNBQVQsQ0FBUDtBQUE2VmIsU0FBQyxDQUFDaUMsS0FBRixDQUFRTixDQUFSO0FBQVc7QUFBQyxLQUFoK0IsR0FBaytCLElBQXorQjtBQUE4K0IsR0FBdGhDO0FBQXVoQyxDQUFuaUMsQ0FBb2lDTyxNQUFwaUMsQ0FBRCIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9mcm9udGVuZC9qcXVlcnkubW9yZWxpbmVzLm1pbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbihzKXtzLmZuLm1vcmVMaW5lcz1mdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9cyh0aGlzKSxpPSh0LmZpbmQoXCJwXCIpLHBhcnNlRmxvYXQodC5jc3MoXCJsaW5lLWhlaWdodFwiKSkpLGE9dC5pbm5lckhlaWdodCgpLG49cy5leHRlbmQoe2xpbmVjb3VudDoxLGJhc2VjbGFzczpcImItbW9yZWxpbmVzX1wiLGJhc2Vqc2NsYXNzOlwianMtbW9yZWxpbmVzX1wiLGNsYXNzc3BlY2lmaWM6XCJzZWN0aW9uXCIsYnV0dG9udHh0bW9yZTpcIm1vcmUgbGluZXNcIixidXR0b250eHRsZXNzOlwibGVzcyBsaW5lc1wiLGFuaW1hdGlvbnNwZWVkOjF9LGUpLGM9bi5iYXNlY2xhc3Mrbi5jbGFzc3NwZWNpZmljK1wiX2VsbGlwc2lzXCIsbD1uLmJhc2VjbGFzcytuLmNsYXNzc3BlY2lmaWMrXCJfYnV0dG9uXCIsbz1uLmJhc2VjbGFzcytuLmNsYXNzc3BlY2lmaWMrXCJfd3JhcHBlclwiLGg9bi5iYXNlanNjbGFzcytuLmNsYXNzc3BlY2lmaWMrXCJfd3JhcHBlclwiLHI9cyhcIjxkaXY+XCIpLmFkZENsYXNzKG8rXCIgXCIraCkuY3NzKHtcIm1heC13aWR0aFwiOnQuY3NzKFwid2lkdGhcIil9KSxtPWkqbi5saW5lY291bnQ7aWYodC53cmFwKHIpLHQucGFyZW50KCkubm90KGgpJiZhPm0pe3QuYWRkQ2xhc3MoYykuY3NzKHtcIm1pbi1oZWlnaHRcIjptLFwibWF4LWhlaWdodFwiOm0sb3ZlcmZsb3c6XCJoaWRkZW5cIn0pO3ZhciBwPXMoXCI8ZGl2PlwiLHtjbGFzczpsLGNsaWNrOmZ1bmN0aW9uKCl7dC50b2dnbGVDbGFzcyhjKSxzKHRoaXMpLnRvZ2dsZUNsYXNzKGwrXCJfYWN0aXZlXCIpLFwibm9uZVwiIT09dC5jc3MoXCJtYXgtaGVpZ2h0XCIpP3QuY3NzKHtoZWlnaHQ6bSxcIm1heC1oZWlnaHRcIjpcIlwifSkuYW5pbWF0ZSh7aGVpZ2h0OmF9LG4uYW5pbWF0aW9uc3BlZWQsZnVuY3Rpb24oKXtwLmh0bWwobi5idXR0b250eHRsZXNzKX0pOnQuYW5pbWF0ZSh7aGVpZ2h0Om19LG4uYW5pbWF0aW9uc3BlZWQsZnVuY3Rpb24oKXtwLmh0bWwobi5idXR0b250eHRtb3JlKSx0LmNzcyhcIm1heC1oZWlnaHRcIixtKX0pfSxodG1sOm4uYnV0dG9udHh0bW9yZX0pO3QuYWZ0ZXIocCl9fSksdGhpc319KGpRdWVyeSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/frontend/jquery.morelines.min.js\n");

/***/ }),

/***/ "./resources/js/frontend/main.js":
/*!***************************************!*\
  !*** ./resources/js/frontend/main.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(document).ready(function () {\n  \"use strict\"; // start of use strict\n\n  /*==============================\n  Menu\n  ==============================*/\n\n  $('.header__btn').on('click', function () {\n    $(this).toggleClass('header__btn--active');\n    $('.header__nav').toggleClass('header__nav--active');\n    $('.body').toggleClass('body--active');\n  });\n  $('.header__search-btn, .header__search-close').on('click', function () {\n    $('.header__search').toggleClass('header__search--active');\n  });\n  /*==============================\n  Home\n  ==============================*/\n\n  $('.home__bg').owlCarousel({\n    animateOut: 'fadeOut',\n    animateIn: 'fadeIn',\n    mouseDrag: false,\n    touchDrag: false,\n    items: 1,\n    dots: false,\n    loop: true,\n    autoplay: false,\n    smartSpeed: 700,\n    margin: 0\n  });\n  $('.home__bg .item').each(function () {\n    if ($(this).attr(\"data-bg\")) {\n      $(this).css({\n        'background': 'url(' + $(this).data('bg') + ')',\n        'background-position': 'center center',\n        'background-repeat': 'no-repeat',\n        'background-size': 'cover'\n      });\n    }\n  });\n  $('.home__carousel').owlCarousel({\n    mouseDrag: false,\n    touchDrag: false,\n    dots: false,\n    loop: true,\n    autoplay: false,\n    smartSpeed: 700,\n    margin: 30,\n    responsive: {\n      0: {\n        items: 2\n      },\n      576: {\n        items: 2\n      },\n      768: {\n        items: 3\n      },\n      992: {\n        items: 4\n      },\n      1200: {\n        items: 4,\n        margin: 40\n      },\n      1310: {\n        items: 5,\n        margin: 40\n      }\n    }\n  });\n  $('.home__nav--next').on('click', function () {\n    $('.home__carousel, .home__bg').trigger('next.owl.carousel');\n  });\n  $('.home__nav--prev').on('click', function () {\n    $('.home__carousel, .home__bg').trigger('prev.owl.carousel');\n  });\n  $(window).on('resize', function () {\n    var itemHeight = $('.home__bg').height();\n    $('.home__bg .item').css(\"height\", itemHeight + \"px\");\n  });\n  $(window).trigger('resize');\n  /*==============================\n  Tabs\n  ==============================*/\n\n  $('.content__mobile-tabs-menu li').each(function () {\n    $(this).attr('data-value', $(this).text().toLowerCase());\n  });\n  $('.content__mobile-tabs-menu li').on('click', function () {\n    var text = $(this).text();\n    var item = $(this);\n    var id = item.closest('.content__mobile-tabs').attr('id');\n    $('#' + id).find('.content__mobile-tabs-btn input').val(text);\n  });\n  /*==============================\n  Select2\n  ==============================*/\n\n  $('#rating').select2();\n  /*==============================\n  Section bg\n  ==============================*/\n\n  $('.section--bg, .details__bg').each(function () {\n    if ($(this).attr(\"data-bg\")) {\n      $(this).css({\n        'background': 'url(' + $(this).data('bg') + ')',\n        'background-position': 'center center',\n        'background-repeat': 'no-repeat',\n        'background-size': 'cover'\n      });\n    }\n  });\n  /*==============================\n  Section carousel\n  ==============================*/\n\n  $('.section__carousel').owlCarousel({\n    mouseDrag: false,\n    touchDrag: false,\n    dots: false,\n    loop: true,\n    autoplay: false,\n    smartSpeed: 700,\n    margin: 30,\n    autoHeight: true,\n    responsive: {\n      0: {\n        items: 2\n      },\n      576: {\n        items: 3\n      },\n      768: {\n        items: 4\n      },\n      992: {\n        items: 4\n      },\n      1200: {\n        items: 6\n      }\n    }\n  });\n  $('.section__nav--prev').on('click', function () {\n    var carouselId = $(this).attr('data-nav');\n    $(carouselId).trigger('prev.owl.carousel');\n  });\n  $('.section__nav--next').on('click', function () {\n    var carouselId = $(this).attr('data-nav');\n    $(carouselId).trigger('next.owl.carousel');\n  });\n  /*==============================\n  Back\n  ==============================*/\n\n  $('.footer__back').on('click', function () {\n    $('body,html').animate({\n      scrollTop: 0\n    }, 700);\n  });\n  /*==============================\n  Filter\n  ==============================*/\n\n  $('.filter__item-menu li').each(function () {\n    $(this).attr('data-value', $(this).text().toLowerCase());\n  });\n  $('.filter__item-menu li').on('click', function () {\n    var text = $(this).text();\n    var item = $(this);\n    var id = item.closest('.filter__item').attr('id');\n    $('#' + id).find('.filter__item-btn input').val(text);\n  });\n  /*==============================\n  Scroll bar\n  ==============================*/\n\n  $('.scrollbar-dropdown').mCustomScrollbar({\n    axis: \"y\",\n    scrollbarPosition: \"outside\",\n    theme: \"custom-bar\"\n  });\n  /*==============================\n  Morelines\n  ==============================*/\n\n  $('.card__description').moreLines({\n    linecount: 6,\n    baseclass: 'b-description',\n    basejsclass: 'js-description',\n    classspecific: '_readmore',\n    buttontxtmore: \"\",\n    buttontxtless: \"\",\n    animationspeed: 400\n  });\n  /*==============================\n  Gallery\n  ==============================*/\n\n  var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n    // parse slide data (url, title, size ...) from DOM elements\n    // (children of gallerySelector)\n    var parseThumbnailElements = function parseThumbnailElements(el) {\n      var thumbElements = el.childNodes,\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          item;\n\n      for (var i = 0; i < numNodes; i++) {\n        figureEl = thumbElements[i]; // <figure> element\n        // include only element nodes\n\n        if (figureEl.nodeType !== 1) {\n          continue;\n        }\n\n        linkEl = figureEl.children[0]; // <a> element\n\n        size = linkEl.getAttribute('data-size').split('x'); // create slide object\n\n        item = {\n          src: linkEl.getAttribute('href'),\n          w: parseInt(size[0], 10),\n          h: parseInt(size[1], 10)\n        };\n\n        if (figureEl.children.length > 1) {\n          // <figcaption> content\n          item.title = figureEl.children[1].innerHTML;\n        }\n\n        if (linkEl.children.length > 0) {\n          // <img> thumbnail element, retrieving thumbnail url\n          item.msrc = linkEl.children[0].getAttribute('src');\n        }\n\n        item.el = figureEl; // save link to element for getThumbBoundsFn\n\n        items.push(item);\n      }\n\n      return items;\n    }; // find nearest parent element\n\n\n    var closest = function closest(el, fn) {\n      return el && (fn(el) ? el : closest(el.parentNode, fn));\n    }; // triggers when user clicks on thumbnail\n\n\n    var onThumbnailsClick = function onThumbnailsClick(e) {\n      e = e || window.event;\n      e.preventDefault ? e.preventDefault() : e.returnValue = false;\n      var eTarget = e.target || e.srcElement; // find root element of slide\n\n      var clickedListItem = closest(eTarget, function (el) {\n        return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n      });\n\n      if (!clickedListItem) {\n        return;\n      } // find index of clicked item by looping through all child nodes\n      // alternatively, you may define index via data- attribute\n\n\n      var clickedGallery = clickedListItem.parentNode,\n          childNodes = clickedListItem.parentNode.childNodes,\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n      for (var i = 0; i < numChildNodes; i++) {\n        if (childNodes[i].nodeType !== 1) {\n          continue;\n        }\n\n        if (childNodes[i] === clickedListItem) {\n          index = nodeIndex;\n          break;\n        }\n\n        nodeIndex++;\n      }\n\n      if (index >= 0) {\n        // open PhotoSwipe if valid index found\n        openPhotoSwipe(index, clickedGallery);\n      }\n\n      return false;\n    }; // parse picture index and gallery index from URL (#&pid=1&gid=2)\n\n\n    var photoswipeParseHash = function photoswipeParseHash() {\n      var hash = window.location.hash.substring(1),\n          params = {};\n\n      if (hash.length < 5) {\n        return params;\n      }\n\n      var vars = hash.split('&');\n\n      for (var i = 0; i < vars.length; i++) {\n        if (!vars[i]) {\n          continue;\n        }\n\n        var pair = vars[i].split('=');\n\n        if (pair.length < 2) {\n          continue;\n        }\n\n        params[pair[0]] = pair[1];\n      }\n\n      if (params.gid) {\n        params.gid = parseInt(params.gid, 10);\n      }\n\n      return params;\n    };\n\n    var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n      var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n      items = parseThumbnailElements(galleryElement); // define options (if needed)\n\n      options = {\n        // define gallery index (for URL)\n        galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n        getThumbBoundsFn: function getThumbBoundsFn(index) {\n          // See Options -> getThumbBoundsFn section of documentation for more info\n          var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n          pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n          return {\n            x: rect.left,\n            y: rect.top + pageYScroll,\n            w: rect.width\n          };\n        }\n      }; // PhotoSwipe opened from URL\n\n      if (fromURL) {\n        if (options.galleryPIDs) {\n          // parse real index when custom PIDs are used\n          // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n          for (var j = 0; j < items.length; j++) {\n            if (items[j].pid == index) {\n              options.index = j;\n              break;\n            }\n          }\n        } else {\n          // in URL indexes start from 1\n          options.index = parseInt(index, 10) - 1;\n        }\n      } else {\n        options.index = parseInt(index, 10);\n      } // exit if index not found\n\n\n      if (isNaN(options.index)) {\n        return;\n      }\n\n      if (disableAnimation) {\n        options.showAnimationDuration = 0;\n      } // Pass data to PhotoSwipe and initialize it\n\n\n      gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n      gallery.init();\n    }; // loop through all gallery elements and bind events\n\n\n    var galleryElements = document.querySelectorAll(gallerySelector);\n\n    for (var i = 0, l = galleryElements.length; i < l; i++) {\n      galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n      galleryElements[i].onclick = onThumbnailsClick;\n    } // Parse URL and open gallery if it contains #&pid=3&gid=1\n\n\n    var hashData = photoswipeParseHash();\n\n    if (hashData.pid && hashData.gid) {\n      openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n    }\n  }; // execute above function\n\n\n  initPhotoSwipeFromDOM('.gallery');\n  /*==============================\n  Player\n  ==============================*/\n\n  function initializePlayer() {\n    if ($('#player').length) {\n      var player = new Plyr('#player');\n    } else {\n      return false;\n    }\n\n    return false;\n  }\n\n  $(window).on('load', initializePlayer());\n  /*==============================\n  Range sliders\n  ==============================*/\n\n  /*1*/\n\n  function initializeFirstSlider() {\n    if ($('#filter__years').length) {\n      var firstSlider = document.getElementById('filter__years');\n      noUiSlider.create(firstSlider, {\n        range: {\n          'min': 2000,\n          'max': 2019\n        },\n        step: 1,\n        connect: true,\n        start: [2006, 2016],\n        format: wNumb({\n          decimals: 0\n        })\n      });\n      var firstValues = [document.getElementById('filter__years-start'), document.getElementById('filter__years-end')];\n      firstSlider.noUiSlider.on('update', function (values, handle) {\n        firstValues[handle].innerHTML = values[handle];\n      });\n    } else {\n      return false;\n    }\n\n    return false;\n  }\n\n  $(window).on('load', initializeFirstSlider());\n  /*2*/\n\n  function initializeSecondSlider() {\n    if ($('#filter__imbd').length) {\n      var secondSlider = document.getElementById('filter__imbd');\n      noUiSlider.create(secondSlider, {\n        range: {\n          'min': 0,\n          'max': 10\n        },\n        step: 0.1,\n        connect: true,\n        start: [2.5, 8.6],\n        format: wNumb({\n          decimals: 1\n        })\n      });\n      var secondValues = [document.getElementById('filter__imbd-start'), document.getElementById('filter__imbd-end')];\n      secondSlider.noUiSlider.on('update', function (values, handle) {\n        secondValues[handle].innerHTML = values[handle];\n      });\n      $('.filter__item-menu--range').on('click.bs.dropdown', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    } else {\n      return false;\n    }\n\n    return false;\n  }\n\n  $(window).on('load', initializeSecondSlider());\n  /*3*/\n\n  function initializeThirdSlider() {\n    if ($('#slider__rating').length) {\n      var thirdSlider = document.getElementById('slider__rating');\n      noUiSlider.create(thirdSlider, {\n        range: {\n          'min': 0,\n          'max': 10\n        },\n        connect: [true, false],\n        step: 0.1,\n        start: 8.6,\n        format: wNumb({\n          decimals: 1\n        })\n      });\n      var thirdValue = document.getElementById('form__slider-value');\n      thirdSlider.noUiSlider.on('update', function (values, handle) {\n        thirdValue.innerHTML = values[handle];\n      });\n    } else {\n      return false;\n    }\n\n    return false;\n  }\n\n  $(window).on('load', initializeThirdSlider());\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/main.js\n");

/***/ }),

/***/ 2:
/*!*********************************************************************************************!*\
  !*** multi ./resources/js/frontend/jquery.morelines.min.js ./resources/js/frontend/main.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! F:\laragon\www\nxplay\resources\js\frontend\jquery.morelines.min.js */"./resources/js/frontend/jquery.morelines.min.js");
module.exports = __webpack_require__(/*! F:\laragon\www\nxplay\resources\js\frontend\main.js */"./resources/js/frontend/main.js");


/***/ })

/******/ });